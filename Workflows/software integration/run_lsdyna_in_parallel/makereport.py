from pytailor import PythonTask, BranchTask, DAG, Workflow, Project, FileSet, Files, Outputs
import numpy as np
from pyreportlib import make_latex_document, make_word_document

def find_content_ID(key, docdict):
    inds = [i for i,s in enumerate(docdict['content']) if key in s.get('title')]
    if len(inds)>0: return inds[0]

files = Files()
outputs = Outputs()

prj = Project.from_name('Test')

wf = Workflow.from_project_and_id(prj, 	988)
fileset = FileSet.from_workflow(wf)
fileset.download(tags=['LSDYNA_postfiles', 'allTrajectories'])


tag = 'LSDYNA_postfiles'
for i,file in enumerate(fileset.list_files()):
    if file['tag'] == tag:
        tagID = i

branchIDs = []
oldbranch = -1
temp = []
branchfiles = {}
for filename in fileset.list_files()[tagID]['filenames']:
    branchID = int(filename.split('/')[1])
    branchIDs.append(branchID)
    fileID = int(filename.split('/')[2])
    if branchID == oldbranch:
        temp.append(filename)
        branchfiles[branchID] = temp
    else:
        oldbranch = branchID
        temp = [filename]


#





"""
For brancher som har lastet opp figur i LSDYNA_postfiles:
 - Vis input
 - Plot trajectory
 - Plot stegvis forlÃ¸p
 

"""



make_document_dict = {
        'document_title': 'Autogenerated beer pong report',
        'document_filename': 'pongreport',
        'author': 'Entail AS',
        'fig_ext': u'.pdf',
        'header_logofilename': 'entail.pdf',
        'logo_image_option_header': "width=250px",
        'content': [
            {'title': 'Summary', 'content': [
                            {'text': 'A total of X simulations of a pingpong ball toss was simulated, resulting in XX near hits and YY hits.'}]},
            {'title': 'Introduction', 'content': [
                {'text': 'This  is an example of an autogenerated report from a tailor workflow of a beerpong game simulated with the explicit nonlinear finite element code LS-DYNA. A mesh of a table, a cup and a pingpong ball is imported, and a set of initial velocity conditions for the ball are simulated in parallel. \n\n For all simulations in which the ball hits twice or more on the cup the trajectory and a few snapshots from the simulation are shown. '}]},
            {'title': 'Results', 'content': []}
                # {'text': {'filename': files['text_file']},
                #  'table': {'filename': files['excel_file'],
                #            'kwargs': {'sheet_name': 'table_2',
                #                       'index_col': 0}
                #            }},
                # {'title': 'Plots', 'content': [{'image': {'filename': files['plots']}}]
                #  },
            #     {'text': 'Then, a plot summarizing the results and some remarks'},
            #     {'title': 'Subsection with fancy latex code', 'content': [
            #         {'latex_code': {'filename': files['latex_code_file']}}
            #     ]}
            # ]},
            # {'title': 'Conclusion',
            #  'content': [
            #      {'text': 'Here are some concluding remarks'}
            #  ]}
        ]
    }

resID = find_content_ID('Results', make_document_dict)
for k,v in branchfiles.items():
    stepimages = [vv for vv in v if 'image' in vv]
    trajectory = [vv for vv in v if 'Trajectory.png' in vv]
    subdict = {'title' : f'Run {k}', 'content' : [
        {'title': 'Trajectory', 'content': [
            {'image': {'filename': trajectory}}]},
        {'title': 'Stepwise plots', 'content': [
            {'image': {'filename': stepimages}}]},
    ]}
    make_document_dict['content'][resID]['content'].append(subdict)

resID = find_content_ID('Summary', make_document_dict)
summarytext = make_document_dict['content'][resID]['content'][0]['text']
nhit = 0
nnear = 0
for k,v in wf.outputs['trigger'].items():
    if v>1 and v<5:
        nnear += 1
    elif v>=5:
        nhit += 1
summarytext = summarytext.replace('XX', str(nnear)).replace('YY', str(nhit)).replace('X', str(len(wf.outputs['trigger'])))
make_document_dict['content'][resID]['content'][0]['text'] = summarytext

make_document_dict['content'][resID]['content'].append({'image': {'filename': 'allTrajectories/0/allTrajectories2D.png'}})





# make_document_dict['content'][resID]['content'].append(subdict)




# # TODO : Add info about toss parameters to summary and each subchapter
#
#
make_latex_document(**make_document_dict)
# make_word_document(**make_document_dict)
